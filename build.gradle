
// 支持子模块统一配置
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url 'https://repo.spring.io/libs-milestone' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.19.RELEASE")
    }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'maven'
    apply plugin: "java-library"

    group 'com.wenjifeng.test'
    version = "0.0.4-SNAPSHOT"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url 'https://repo.spring.io/libs-milestone' }
        mavenCentral()
    }

}

subprojects {

    // 用于springcloud项目版本号
//    ext {
//        netflixVersion= 'Edgware.SR4'
//    }

    ext.buildDate = null
    ext.buildJarFile = new File(project.buildDir, "libs/${project.name}-${project.version}.jar")

    compileJava.options.fork = true

    def currentTime = java.time.ZonedDateTime.now()
    compileJava.doLast {
        buildDate = currentTime
        jar.manifest {
            attributes("Implementation-Date": project.buildDate)
        }
    }

    tasks.jar.onlyIf {
        project.buildDate != null || !project.buildJarFile.exists()
    }

    jar {
        enabled = true
        manifest {
            attributes("Implementation-Title": project.name,
                    "Implementation-Vendor": project.group,
                    "Created-By": project.group,
                    "Implementation-Version": project.version)
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenCentral()
    }
    configurations.all {
        exclude(group: "cglib", module: "cglib")
        exclude(group: "cglib", module: "cglib-full")
    }
    dependencies {
        //web
        compile 'org.springframework.boot:spring-boot-starter-web'
        //测试类
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compile("org.projectlombok:lombok")
        //annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
        //mysql驱动
        runtimeOnly 'mysql:mysql-connector-java'
        //测试类
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        //数据源
        compile("com.alibaba:druid:1.1.20")
        compile("com.alibaba:druid-spring-boot-starter:1.1.20")
        
        //commons
        compile("commons-lang:commons-lang:2.6")
        
        //aop
        compile 'org.springframework.boot:spring-boot-starter-aop'

        implementation 'com.guicedee.services:bouncycastle:1.2.2.1-jre17'

    }
}

